install.packages(c("epiR", "ggdag"))
library(tidyverse)     #limpiar base de datos: http://r4ds.had.co.nz/
library(broom)         #limpiar output de modelos
library(haven)         #importar diferentes formatos
library(readxl)        #importar excel files
library(ggdag)         #crear DAGs y conjuntos de ajuste: https://ggdag.netlify.com/
library(compareGroups) #generar tabla 1 y 2
library(epiR)          #generar tablas epidemiol贸gicas
library(epiDisplay)    #generar tablas epidemiol贸gicas
library(knitr)         #generar formato de tabla
library(kableExtra)    #generar formato extra de tabla
library(survival)      #analizar datos tiempo a evento
library(survminer)     #visualizar datos tiempo a evento
set.seed(33)
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE, error=FALSE)
theme_set(theme_bw())
options(width = 120)
knitr::include_graphics("notrack/tidy-02.PNG")
knitr::include_graphics("notrack/tidy-01.PNG")
knitr::include_graphics("notrack/repro-01.PNG")
aidsdb <- read_dta("data/aidsdb.dta") %>% as_factor()
knitr::include_graphics("notrack/epi-10.png")
aidsdb %>%
count(ccr2,aids) %>%
spread(aids,n) %>%
mutate(Yes=Yes*100,
risk=Yes/(No+Yes),
odds=Yes/No) %>%
mutate(rr=c(.$risk[1]/.$risk[2],NA),
or=c(.$odds[1]/.$odds[2],NA))
knitr::include_graphics("notrack/epi-02.png")
aidsdb_or <- read_dta("data/aidsdb.dta") %>% as_factor() %>%
group_by(aids) %>% sample_n(150) %>% ungroup()
aidsdb_or %>% glimpse()
epi.2by2(with(aidsdb_or,table(ccr5,aids)),
method = "case.control")
aidsdb_or_no <- aidsdb_or %>% mutate_if(is.factor,fct_relevel, ... = "No")
compareGroups(aids ~ ccr5 + race,data = aidsdb_or_no,byrow=T) %>%
createTable(show.ratio = T)
aidsdb %>%
count(ccr5,aids) %>%
spread(aids,n) %>%
mutate(risk=Yes/(No+Yes)) %>%
mutate(rr=c(.$risk[1]/.$risk[2],NA))
aidsdb %>%
count(ccr5,aids) %>%
spread(aids,n) %>%
mutate(No=if_else(ccr5=="No",No*100,No %>% as.double()),
Yes=if_else(ccr5=="No",Yes*100,Yes %>% as.double()),
risk=Yes/(No+Yes)) %>%
mutate(rr=c(.$risk[1]/.$risk[2],NA))
knitr::include_graphics("notrack/epi-01.png")
aidsdb <- read_dta("data/aidsdb.dta") %>% as_factor()
aidsdb %>% glimpse()
epi.2by2(with(aidsdb,table(ccr5,aids)),
method = "cohort.count")
aidsdb_no <- aidsdb %>% mutate_if(is.factor,fct_relevel, ... = "No")
cs(aidsdb_no$aids,aidsdb_no$ccr5)
knitr::include_graphics("notrack/epi-03.png")
knitr::include_graphics("notrack/epi-04.png")
knitr::include_graphics("notrack/epi-05.png")
knitr::include_graphics("notrack/epi-06.png")
coxdb <- read_dta("data/aidsdb.dta") %>% as_factor() %>%
mutate(aids=as.integer(aids)-1)
coxdb %>% glimpse()
fit <- survfit(Surv(ttoaidsorexit, aids) ~ ccr5, data =  coxdb)
#summary(fit)
fit %>% broom::tidy() #revisa el estrato!
#(1-(1/84)) * (1-(1/81))
# Visualize with survminer
ggsurvplot(fit, data = coxdb, risk.table = TRUE,
conf.int = T,ggtheme = theme_bw(),#ggtheme = theme_minimal(),
pval = T,censor=FALSE,tables.theme = theme_cleantable())
survdiff(Surv(ttoaidsorexit, aids) ~ ccr5, data =  coxdb)
knitr::include_graphics("notrack/ggdag-epistat2019.png")
knitr::include_graphics("notrack/nmeth.3904-F3_A.jpg")
aidsdb_or %>% glimpse()
aidsdb_or_no
glm(aids ~ ccr5 + race, data = aidsdb_or_no, family = binomial(link = "logit"))
coxdb %>% glimpse()
fit <- survfit(Surv(ttoaidsorexit, aids) ~ ccr5, data =  coxdb)
#summary(fit)
fit %>% broom::tidy() #revisa el estrato!
coxdb
#summary(fit)
fit %>% broom::tidy() #revisa el estrato!
# Visualize with survminer
ggsurvplot(fit, data = coxdb, risk.table = TRUE,
conf.int = T,ggtheme = theme_bw(),#ggtheme = theme_minimal(),
pval = T,censor=FALSE,tables.theme = theme_cleantable())
coxdb
fit
coxdb
women
library(tidyverse)     #limpiar base de datos: http://r4ds.had.co.nz/
library(broom)         #limpiar output de modelos
library(haven)         #importar diferentes formatos
library(readxl)        #importar excel files
library(ggdag)         #crear DAGs y conjuntos de ajuste: https://ggdag.netlify.com/
library(compareGroups) #generar tabla 1 y 2
library(epiR)          #generar tablas epidemiol贸gicas
library(epiDisplay)    #generar tablas epidemiol贸gicas
library(knitr)         #generar formato de tabla
library(kableExtra)    #generar formato extra de tabla
library(survival)      #analizar datos tiempo a evento
library(survminer)     #visualizar datos tiempo a evento
set.seed(33)
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE, error=FALSE)
theme_set(theme_bw())
options(width = 120)
data_frame(p=seq(0,1,0.01)) %>%
mutate(odd=p/(1-p)) %>%
ggplot(aes(p,log(odd))) +
geom_point() +
coord_flip()
data_frame(p=seq(0,1,0.01)) %>%
mutate(odd=p/(1-p),
logit=log(odd))
data_frame(p=seq(0,1,0.01)) %>%
mutate(odd=p/(1-p),
logit=log(odd)) %>%
pivot_longer(cols = -p,names_to = "key",values_to = "value")
data_frame(p=seq(0,1,0.01)) %>%
mutate(odd=p/(1-p),
logit=log(odd)) %>%
pivot_longer(cols = -p,names_to = "key",values_to = "value") %>%
ggplot(aes(p,value)) +
geom_point() +
facet_wrap(~key)
data_frame(p=seq(0,1,0.01)) %>%
mutate(odd=p/(1-p),
logit=log(odd)) %>%
pivot_longer(cols = -p,names_to = "key",values_to = "value") %>%
ggplot(aes(p,value)) +
geom_point() +
facet_wrap(~key,scales = "free")
data_frame(p=seq(0,1,0.01)) %>%
mutate(odd=p/(1-p),
logit=log(odd)) %>%
pivot_longer(cols = -p,names_to = "key",values_to = "value") %>%
ggplot(aes(p,value)) +
geom_point() +
facet_wrap(~key,scales = "free") +
coord_flip()
data_frame(p=seq(0,1,0.01)) %>%
mutate(odd=p/(1-p),
logit=log(odd)) %>%
pivot_longer(cols = -p,names_to = "key",values_to = "value") %>%
mutate(key=fct_rev(key)) %>%
ggplot(aes(p,value)) +
geom_point() +
facet_wrap(~key,scales = "free") +
coord_flip()
